// Map Server Configuration

// Listen Address
// Public IP for the map server that the client will connect to. Must be open to the public if you
// want non-local clients to connect. The client initial connects to the login server and after auth, the login server
// forwards this IP/Port to the client to directly connect. Note- The map server binds to 0.0.0.0, so this is just an
// address that the client can access - it does not control which interface to bind to.
map_ip: 192.168.1.68
map_port: 2001

// Login Address
// IP Address/Port of the login server. The map server uses this to hand the client back to the login server after logging
// out of a character.
// TODO: Merge with login_ip and login_port from inter.conf
loginip: 192.168.1.68
loginport: 2000


// Map Server ID
// Currently, you can scale out the server by running multiple map servers, having each one only running a subset of the maps,
// and distribute the load across multiple machines. For each map server, you will need to create a new map.conf file and assign
// it a unique server_id. The database column `MapServer` dictates which map server owns which map.
//
// NOTE: Switching between map servers is a disruptive process to the client, takes several seconds, and is not well-tested so it
// is not currently recommended.
server_id: 0

// Town Names
// These are used to display the name of the character nation on the Heros list (CTRL+W) in the client. The order is important and
// the index must match the `ChaNation` column in the `Character` database table (they are 0 indexed). These DO NOT influence the
// world map portals.
town: Town1
town: Town2
town: Town3
town: Town4
town: Town5
town: Town6

// Save Time (Unused)
// Originally was used to setup a timer for commiting character data to the database. Currently is unused, but not sure what
// has replaced it.
// TODO: Figure out what has replaced it and remove this option
save_time: 60


// XP Rate & Drop Rate (Unused)
// TODO: Figure out if anything replaced this and remove
xprate: 10
droprate: 1

// Metadata files to send to the client
// These files cache various bits of game information on the client, such as the item stats that
// are visible when right clicking on an item.
//
// IMPORTANT:
// These files are stored in the `meta` directory and  must be generated by running the `metan` command
// everytime new items are added to the database.
//
//// TODO: Figure out if this is used or differs from the login meta?
meta: RidableAnimals
meta: CharicInfo0
meta: CharicInfo1
meta: ItemInfo0
meta: ItemInfo1
